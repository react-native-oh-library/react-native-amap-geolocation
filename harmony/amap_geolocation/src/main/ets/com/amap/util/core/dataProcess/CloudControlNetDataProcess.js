import HashMap from '@ohos.util.HashMap'; import { Constants } from '../utils/Constants'; import { cloudManager } from '../utils/auth/CloudManager'; import { Utils } from '../utils/Utils'; import { r10 } from '../utils/RequestUtil'; export class c12 { constructor() { this.g11 = new HashMap(); } h11(request) { if (request.url.includes(Constants.i11)) { return request; } return this.j11(request); } j11(request) { const product = r10.k11(request); const d12 = cloudManager.l11(product); if (d12 === undefined || d12.isEmpty()) { return request; } if (product === undefined || product.length === 0) { return request; } const status = this.g11.get(product); if (status === undefined || status === 'NO') { this.g11.set(product, 'YES'); } else { return request; } let e12 = d12.get(Constants.n11); if (e12 === undefined || e12.length === 0) { return request; } let f12 = d12.get(Constants.o11); let g12 = d12.get(Constants.p11); let h12 = cloudManager.q11(request); let i12 = request.header; let j12 = {}; let k12 = Utils.r11(request.header); if (k12 !== undefined) { k12.forEach((value, key) => { if (key) { j12[key] = value; } }); } j12[Constants.n11] = Utils.s11(e12); j12[Constants.o11] = Utils.s11(f12); j12[Constants.p11] = Utils.s11(g12); j12[Constants.t11] = Utils.s11(h12); request.header = j12; return request; } } 