import { IAuthManager, IAuthResponse } from '../../interface/IAuth'; import { SDKInfo } from '../../SDKInfo'; import HashMap from '@ohos.util.HashMap'; import { IResponse } from '../../net/IResponse'; import { IRequest } from '../../net/IRequest'; declare class AuthManagerImpl implements IAuthManager { private e26; m10: string; d26: boolean; identifier: string; constructor(); setApiKey(v44: string): void; getApiKey(): string; i26(u44: boolean): void; registerWithComponent(t44: SDKInfo, context: Context): void; registerAuthWithComponent(r44: SDKInfo, s44: Array<string>, context: Context): Promise<IAuthResponse>; m26(): Promise<IAuthResponse>; requestAuthWithComponent(o44: SDKInfo, p44: Array<string>, params: HashMap<string, string> | undefined, context: Context, q44?: boolean): Promise<IAuthResponse>; q26(response: IResponse, n44: IAuthResponse, request: IRequest, context: Context): HashMap<string, string> | undefined; q19(response: IResponse, m44: Array<string>): Promise<IAuthResponse>; u26(l44: IAuthResponse, jsonObject: IAuthResponse): void; l26(info: string, j44: HashMap<string, string> | undefined, result: string | Object | ArrayBuffer | undefined, k44: SDKInfo, context: Context): Promise<void>; k26(): Promise<void>; p26(h44: SDKInfo, i44: string): Object; o26(f44: SDKInfo, g44: Array<string>): Uint8Array | undefined; } export declare const authManager: AuthManagerImpl; export {}; 