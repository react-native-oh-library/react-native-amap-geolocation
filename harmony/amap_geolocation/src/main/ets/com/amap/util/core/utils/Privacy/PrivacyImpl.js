import HashMap from '@ohos.util.HashMap'; import http from '@ohos.net.http'; import { AMapPrivacyInfoStatus, AMapPrivacyShowStatus, AMapPrivacyAgreeStatus } from '../../interface/IPrivacy'; import { PreferencesUtil } from '../PreferencesUtil'; import { LogUtil } from '../LogUtil'; import { Constants } from '../Constants'; import { authManager } from '../auth/AuthManagerImpl'; import { e27 } from '../SysUtils'; import { NetManager } from '../../net/NetManager'; class y37 { constructor() { this.z35 = AMapPrivacyInfoStatus.Unknown; this.a36 = AMapPrivacyShowStatus.Unknown; this.b36 = ''; this.c36 = ''; this.showTime = '-1'; this.d36 = AMapPrivacyAgreeStatus.Unknown; this.e36 = '-1'; this.f36 = ''; this.g36 = ''; this.h36 = ''; this.i36 = ''; } updatePrivacyShow(m39, n39, o39, context) { var p39, q39; if (o39 === undefined || o39.r21() === undefined || o39.r21().length === 0) { return; } let r39 = false; if (m39 !== this.a36) { r39 = true; this.a36 = m39; } if (n39 !== this.z35) { r39 = true; this.z35 = n39; } if (r39 === true) { this.b36 = (p39 = o39.r21()) !== null && p39 !== void 0 ? p39 : ''; this.c36 = (q39 = o39.getSDKVersion()) !== null && q39 !== void 0 ? q39 : ''; this.h36 = '' + Date.now(); this.showTime = this.h36; } if (r39) { this.j36(context); } } updatePrivacyAgree(h39, i39, context) { var j39, k39; if (i39 === undefined || i39.r21() === undefined || i39.r21().length === 0) { return; } let l39 = false; if (h39 !== this.d36) { l39 = true; this.d36 = h39; } if (l39) { this.f36 = (j39 = i39.r21()) !== null && j39 !== void 0 ? j39 : ''; this.g36 = (k39 = i39.getSDKVersion()) !== null && k39 !== void 0 ? k39 : ''; this.h36 = '' + Date.now(); this.e36 = this.h36; } if (l39) { this.j36(context); } } checkPrivacyStatus(b39, context) { if (b39 === undefined) { let g39 = Constants.j31 + ' ' + Constants.j31 + 'sdkInfo is undefined'; throw new Error(g39); } if (this.d36 === AMapPrivacyAgreeStatus.Unknown || this.a36 === AMapPrivacyShowStatus.Unknown) { this.k36(context); } let c39 = true; let d39 = false; let e39 = undefined; if (this.a36 !== AMapPrivacyShowStatus.DidShow) { c39 = false; if (this.a36 === AMapPrivacyShowStatus.Unknown) { e39 = `${Constants.u31} ${Constants.v31} 使用 ${b39.r21()} SDK 功能前请设置隐私权政策是否弹窗告知用户`; } else if (this.a36 === AMapPrivacyShowStatus.NotShow) { e39 = `${Constants.w31} ${Constants.x31} 使用 ${b39.r21()} SDK 功能前请确保隐私权政策已弹窗告知用户`; } } if (c39 === true && this.z35 !== AMapPrivacyInfoStatus.DidContain) { c39 = false; if (this.z35 === AMapPrivacyInfoStatus.Unknown) { e39 = `${Constants.y31} ${Constants.z31} 使用 ${b39.r21()} 功能前请确保设置隐私权政策是否包含高德开平隐私权政策`; } else if (this.z35 === AMapPrivacyInfoStatus.NotContain) { e39 = `${Constants.a32} ${Constants.b32} 使用 ${b39.r21()} SDK 功能前请确保隐私权政策已经包含高德开平隐私权政策`; } } if (c39 === true && this.d36 !== AMapPrivacyAgreeStatus.DidAgree) { c39 = false; if (this.d36 === AMapPrivacyAgreeStatus.Unknown) { e39 = `${Constants.c32} ${Constants.d32} 使用 ${b39.r21()} 功能前请确保设置隐私权政策是否取得用户同意`; } else if (this.d36 === AMapPrivacyAgreeStatus.NotAgree) { e39 = `${Constants.e32} ${Constants.f32} 使用 ${b39.r21()} SDK 功能前请确保隐私权政策已取得用户同意`; } } if (this.i36 !== this.h36) { d39 = true; this.i36 = this.h36; } const f39 = authManager.getApiKey(); if (f39 === undefined || f39.length === 0) { e39 = `${Constants.g32} ${Constants.h32} 使用 ${b39.r21()} SDK 功能前请确保已经正确设置apiKey，如有疑问请在高德开放平台官网中搜索【INVALID_USER_KEY】相关内容进行解决。`; } if (d39) { this.l36(b39, context); } if (e39 !== undefined && e39.length > 0) { throw new Error(e39); } return c39; } j36(context) { let a39 = 'privacyInfo:' + this.m36(this.z35) + ';'; a39 = a39 + 'privacyShow:' + this.n36(this.a36) + ';'; a39 = a39 + 'showTime:' + this.showTime + ';'; a39 = a39 + 'show2SDK:' + this.b36 + ';'; a39 = a39 + 'show2SDKVer:' + this.c36 + ';'; a39 = a39 + 'privacyAgree:' + this.o36(this.d36) + ';'; a39 = a39 + 'agreeTime:' + this.e36 + ';'; a39 = a39 + 'agree2SDK:' + this.f36 + ';'; a39 = a39 + 'agree2SDKVer:' + this.g36 + ';'; a39 = a39 + 'changeStamp:' + this.h36 + ';'; a39 = a39 + 'uploadStamp:' + this.i36; if (a39 !== undefined && a39.length > 0) { PreferencesUtil.putSync(context, 'amap_privacy_info', a39, true); } } k36(context) { let t38 = ''; try { const u38 = PreferencesUtil.getSync(context, 'amap_privacy_info', ''); if (u38 === undefined) { return false; } let v38 = ''; if (typeof u38 === 'string') { const w38 = u38; const x38 = u38.split(';'); x38.forEach((value) => { LogUtil.i('PrivacyImpl', 'info', `value:${value}`); const z38 = value.split(':'); if (z38.length === 2) { switch (z38[0]) { case 'privacyInfo': this.z35 = Number.parseInt(z38[1]); break; case 'privacyShow': this.a36 = Number.parseInt(z38[1]); break; case 'showTime': this.showTime = z38[1]; break; case 'show2SDK': this.b36 = z38[1]; break; case 'show2SDKVer': this.c36 = z38[1]; break; case 'privacyAgree': this.d36 = Number.parseInt(z38[1]); break; case 'agreeTime': this.e36 = z38[1]; break; case 'agree2SDK': this.f36 = z38[1]; break; case 'agree2SDKVer': this.g36 = z38[1]; break; case 'changeStamp': this.h36 = z38[1]; break; case 'uploadStamp': this.i36 = z38[1]; break; default: break; } } }); } if (this.d36 !== AMapPrivacyAgreeStatus.Unknown) { return true; } return false; } catch (e) { let error = e; LogUtil.e('PrivacyImpl', '读取授权数据失败', `${error.message}, code: ${error.code}`); return false; } } m36(s38) { return s38; } n36(r38) { return r38; } o36(q38) { return q38; } l36(l38, context) { const header = this.getRequestHeader(l38); let params = this.p36(); let request = { url: "http://dualstack-restsdk.amap.com/sdk/compliance/params", header: header, params: params, isREST: true, o12: '3.0', needParseData: true }; let m38 = new NetManager(); let n38 = m38.makeRequestPost(request, context); n38.then((response) => { if (response.responseCode === http.ResponseCode.OK) { if (response.commonResponseResult !== undefined && response.commonResponseResult.status === '1') { this.j36(context); LogUtil.i('AuthManagerImpl', `compliance/params `, 'success'); } } }).catch((error) => { LogUtil.e('AuthManagerImpl', `catch error, ${error.code}, ${error.message}`, ''); }); } getRequestHeader(j38) { var k38; let userAgent = (k38 = j38.s21()) !== null && k38 !== void 0 ? k38 : ''; let header = {}; header[Constants.z26] = 'application/x-www-form-urlencoded'; header[Constants.r26] = e27(); header[Constants.a27] = 'gzip, deflate'; header[Constants.b27] = userAgent; return header; } p36() { var z37, a38, b38, c38, d38, e38, f38, g38, h38, i38; let params = new HashMap(); params.set('privacyInfo', (z37 = this.z35.toString()) !== null && z37 !== void 0 ? z37 : ''); params.set('privacyShow', (a38 = this.a36.toString()) !== null && a38 !== void 0 ? a38 : ''); params.set('showTime', (b38 = this.showTime) !== null && b38 !== void 0 ? b38 : ''); params.set('show2SDK', (c38 = this.b36) !== null && c38 !== void 0 ? c38 : ''); params.set('show2SDKVer', (d38 = this.c36) !== null && d38 !== void 0 ? d38 : ''); params.set('privacyAgree', (e38 = this.d36.toString()) !== null && e38 !== void 0 ? e38 : ''); params.set('agreeTime', (f38 = this.e36) !== null && f38 !== void 0 ? f38 : ''); params.set('agree2SDK', (g38 = this.f36) !== null && g38 !== void 0 ? g38 : ''); params.set('agree2SDKVer', (h38 = this.g36) !== null && h38 !== void 0 ? h38 : ''); params.set('key', (i38 = authManager.getApiKey()) !== null && i38 !== void 0 ? i38 : ''); params.set('output', 'json'); return params; } } export const privacyImpl = new y37(); 